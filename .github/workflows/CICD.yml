name: CI/CD

on:
  push:
    branches: [ "develop" ]
  pull_request:
    branches: [ "develop" ]

permissions:
  contents: read

jobs:
  CI:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Setup serviceAccountkey.json
      run: |
        touch serviceAccountKey.json
        echo ${{ secrets.FIREBASE_ACCOUNT_KEY }} >> serviceAccountkey.json
      shell: bash

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      shell: bash
        
    - name: Build with Gradle
      uses: ./gradlew build -x test

    - name: Docker Login
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}
        logout: true

    # Docker Image Build
    - name: Docker Image Build
      run: docker build --platform linux/amd64 -t ${{ secrets.DOCKERHUB_USERNAME }}/alert .

    # DockerHub Push
    - name: DockerHub Push
      run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/alert
      
  CD:
    runs-on: self-hosted
    needs: CI
    steps:
    
    - name: Docker Container Remove
      run: sudo docker rm -f alert 2>/dev/null || true

    - name: Docker Old Image Remove
      run: sudo docker rmi ${{ secrets.DOCKERHUB_USERNAME }}/alert

    - name: Docker Run New
      run: sudo docker run --name alert \
        -e DB_URL=${{ secrets.DB_URL }} \
        -e DB_USERNAME=${{ secrets.DB_USERNAME }}
        -e DB_PASSWORD=${{ secrets.DB_PASSWORD }}
        -e JWT_SECRET=${{ secrets.JWT_SECRET }}
        -d \
        -p 8080:8080 \
        ${{ secrets.DOCKERHUB_USERNAME }}/alert
